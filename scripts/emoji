#!/usr/bin/bash
################################# About ################################
## Author: Simon D. Woodtli
## Project: https://github.com/SimonWoodtli/dotfiles/blob/main/scripts/emoji
## Script Name: emoji
## License:  Apache-2.0
## Dependencies: fzf, xclip, sed, cut, tr
################################# Setup ##############################
## 1. Copy script into your $PATH and chmod it
## 2. Run script once to populate database
## 3. Add to your ~/.vimrc: (rm # char at beginning)
################################# vimrc ################################
#"ex-command fzf window:
#command! Emoji call fzf#run(fzf#wrap({'source': 'cat "$HOME/.local/share/emojidb/emoji.v15.1"', 'sink': function('InsertFirstCharAtCursor')}))
#"print function:
#function! InsertFirstCharAtCursor(text)
#  let rmTxt = split(a:text, ' ')
#  let firstChar = get(rmTxt, 0)
#  execute "normal! i" . firstChar . "\<Esc>"
#endfunction
#"leader-command: (adjust to what you like)
#nnoremap <silent> <leader><leader>e :Emoji<CR>
################################ Script ################################
## Check if dependencies are installed
_checkDependencies() {
  local -a dependencies=( xclip fzf sed cut tr )
  local -a missingDependencies=()
  for dependency in "${dependencies[@]}"; do
    command -v "$dependency" >/dev/null 2>&1 || missingDependencies+=( "$dependency" )
  done
  if [[ -n "${missingDependencies[@]}" ]]; then
    echo "ERROR: Missing dependency(ies): "${missingDependencies[@]}""
    exit 1
  fi
}
## Fetch data and filter out unwanted data
_createEmojiList() {
  _checkDependencies
  curl "https://unicode.org/Public/emoji/15.1/emoji-test.txt"                 \
    | sed 's|^#.*$||g'                        `#remove all comment lines`     \
    | cut -d '#' -f 2                         `#remove columns until last one`\
    | cut -c2-                                `#remove empty first character` \
    | sed '/^[[:blank:]]*$/d'                 `#remove all empty lines`       \
    | sed 's|E[[:digit:]]*\.[[:digit:]]*||g'  `#remove all E Numbers`         \
    | sed '/^.*skin.tone.*$/d'                `#remove all skin colors`       \
    > "$HOME/.local/share/emojidb/emoji.v15.1" #update 16 when published
}
## Check if emojidb and emoji file are present or create them
_checkEmojiDirFile() {
  [[ -d "$HOME/.local/share/emojidb" ]] || mkdir "$HOME/.local/share/emojidb"
  [[ -f "$HOME/.local/share/emojidb/emoji.v15.1" ]] || _createEmojiList
}
_printEmojiCopyClipboard() {
  ##FIXME Currently terminal does not support multibinary emojis with ZWJ
  ## cut line and only store first string
  local emoji=$(fzf < "$HOME/.local/share/emojidb/emoji.v15.1" | cut -f1 -d ' ')
  ## print and copy emoji
  echo "$emoji"; echo "$emoji" | tr -d '\n' | xclip -sel clipboard
}
_checkEmojiDirFile && _checkDependencies && _printEmojiCopyClipboard
