#!/bin/bash
## Author: Simon D. Woodtli
################################# setup ################################
#1. Install pipx
#2. Install piper: `pipx install piper-tts`
################################# Usage ################################
#Pass in file: `text2voice < file`
#Pass in arg: `text2voice "Pass in a string"`
#Pipe in: `echo 'hello' | text2voice`
#Copy to clipboard(same as before with $1 copy): `text2voice copy "hello"`
################################ script ################################
declare piperPath="$HOME/.local/share/speechmodels/piper"
declare language="$piperPath/en_US-joe-medium.onnx"
declare file="$HOME/.cache/text2voice.wav"
declare distrobox=/usr/bin/distrobox-host-exec

#TODO add dependency check
_have() { type "$1" >/dev/null; }
_haveContainer() { [[ -f /run/.containerenv ]]; }
_init() {
  mkdir -p "$piperPath"
  local -a models=( "en_US-joe-medium" "en_US-amy-medium"
  "en_GB-southern_english_female-low" "en_GB-northern_english_male-medium"
  "de_DE-pavoque-low" "de_DE-kerstin-low"
  "es_ES-mls_9972-low" "es_ES-davefx-medium"
  "zh_CN-huayan-medium" )
  for model in "${models[@]}"; do
    piper="piper --model $model --output_file $file >/dev/null 2>&1"
    _haveContainer && echo 'Welcome' | eval "$distrobox $piper" || echo 'Welcome' | eval "$piper"

  done
  mv "$PWD"/*.onnx* "$piperPath"
}
_raw() {
  local piper="piper --model $language --output-raw"
  local aplay="aplay -r 22050 -f S16_LE -t raw -"
  local content="$1"
  if [[ -z "$content" ]]; then
    content=$(</dev/stdin)
  fi
  _haveContainer && echo "$content" | eval "$distrobox $piper | $distrobox $aplay" || echo "$content" | eval "$piper | $aplay"
}
save() {
  local piper="piper --model $language --output_file $file >/dev/null 2>&1"
  local content="$1"
  if [[ -z "$content" ]]; then
    content=$(</dev/stdin)
  fi
  _haveContainer && echo "$content" | eval "$distrobox $piper" || echo "$content" | eval "$piper"
  if _have xclip; then
    #can't copy -t audio/wav so file path is next best thing
    echo "$file" | xclip -sel clip
    _have notify-send && notify-send "Copied filepath 📁 to Clipboard"
  fi
}
################################ handler ###############################
[[ -d "$piperPath" ]] || _init
case "$1" in
  "") _raw ;;
  save) save "$2";;
  *) _raw "$1" ;;
esac

#TODO add bash auto completion (if you add more features, just for 'save' I don't need it)
